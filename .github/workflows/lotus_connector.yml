name: Lotus Connector

on:
  workflow_dispatch:
  push:
    branches: [ main, staging, develop, testcicd ]
    paths:
      - '**'
      - '.github/workflows/lotus_connector.yml'
  pull_request:
    branches: [ main, staging, develop, testcicd ]

defaults:
  run:
    shell: bash

jobs:
  # https://tomasvotruba.com/blog/2020/11/16/how-to-make-dynamic-matrix-in-github-actions/
  setup:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.matrix.outputs.dirs }}
    steps:
      - uses: actions/checkout@v3
        # Run jobs.build for every directory that contains a manifest.yaml
      - id: matrix
        run: |
          if [ ${{ github.event_name }} == 'pull_request' ]
          then 
            # if this is a pull request, then only look at directories different from the target branch to save some time
            git fetch origin $GITHUB_BASE_REF --depth=1
            echo "dirs=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} | xargs dirname | uniq | xargs -I {} find {} -type f -name 'manifest.yaml' -maxdepth 1 | xargs dirname | uniq | jq -R -s -c 'split("\n")[:-1]'))" >> $GITHUB_OUTPUT
          else 
            # if this is a change on main or staging branch, then build everything
            echo "dirs=$(find . -type f -name 'manifest.yaml' | xargs dirname | jq -R -s -c 'split("\n")[:-1]'))" >> $GITHUB_OUTPUT
          fi

  test:
    name: Build and Test
    needs: [ setup ]

    strategy:
      matrix:
        dir: ${{fromJson(needs.setup.outputs.dirs)}}

    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions. Required with google-github-actions/auth.
    permissions:
      contents: 'read'
      id-token: 'write'
            
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Build
      id: build-tester
      uses: docker/build-push-action@v2
      ssh: |
        default=${{ env.SSH_AUTH_SOCK }}
      env:
        BRANCH: ${{ env.GITHUB_REF_SLUG }}
      with:
        file: Dockerfile
        context: ${{ matrix.dir }}
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
        target: test
        outputs: type=docker

    - name: Test
      run: |
        docker run ${{ steps.build-tester.outputs.imageid }}

  build:
    if: github.event_name != 'pull_request' # this only runs for main and staging
    name: Publish Docker image
    needs: [ setup , test ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{fromJson(needs.setup.outputs.dirs)}}

    # Add "id-token" with the intended permissions. Required with google-github-actions/auth.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Run read-yaml action
      id: yaml-data
      uses: KJ002/read-yaml@main      # You may wish to replace main with a version tag such as '1.6' etc.
      with:
        file: '${{matrix.dir}}/manifest.yaml'          # File to read from
        key-path: '["version"]' # Access the runs key then the using key and retuns the value.

    - id: connector-name
      run: |
        echo "::set-output name=value::$(basename ${{ matrix.dir }})" # ls only directories that changed

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ secrets.DOCKER_REPO }}/${{ steps.connector-name.outputs.value }}-connector
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          # output 0.1.2
          type=semver,pattern={{version}},value=${{ steps.yaml-data.outputs.data }}
          # output 0.1
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.yaml-data.outputs.data }}
          # disabled if major zero
          type=semver,pattern={{major}},enable=${{ !startsWith(steps.yaml-data.outputs.data, '0.') }}
        labels: |
          org.opencontainers.image.title=${{ steps.connector-name.outputs.value }}-connector
          org.opencontainers.image.description=

    - name: Login to GitHub Container Registry
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Build and Publish
      uses: docker/build-push-action@v2
      env:
        BRANCH: ${{ env.GITHUB_REF_SLUG }}
      with:
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          BUILD=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          PACKAGE=${{ matrix.dir }}
        ssh: |
          default=${{ env.SSH_AUTH_SOCK }}
        file: Dockerfile
        context: ${{ matrix.dir }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # - name: Post to a Slack channel
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.19.0
    #   with:
    #     # Slack channel id, channel name, or user id to post message.
    #     # See also: https://api.slack.com/methods/chat.postMessage#channels
    #     channel-id: 'C03DL2A73SB' #devops-alerts
    #     # For posting a simple plain text message
    #     slack-message: "GitHub Action build result: *${{ job.status }}* <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|${{ github.sha }}>\n---\n\n${{ steps.meta.outputs.tags }}"
    #   env:
    #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

