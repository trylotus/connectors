// Code generated - DO NOT EDIT.
// This file is a generated protobuf definition and any manual changes will be lost.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: lendingpool.proto

package lendingpool

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Borrow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts             *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve        []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User           []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	OnBehalfOf     []byte                 `protobuf:"bytes,4,opt,name=onBehalfOf,proto3" json:"onBehalfOf,omitempty"`
	Amount         []byte                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                 // uint256
	BorrowRateMode []byte                 `protobuf:"bytes,6,opt,name=borrowRateMode,proto3" json:"borrowRateMode,omitempty"` // uint256
	BorrowRate     []byte                 `protobuf:"bytes,7,opt,name=borrowRate,proto3" json:"borrowRate,omitempty"`         // uint256
	Referral       uint32                 `protobuf:"varint,8,opt,name=referral,proto3" json:"referral,omitempty"`
	BlockNumber    uint64                 `protobuf:"varint,9,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex       uint64                 `protobuf:"varint,10,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash         []byte                 `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Borrow) Reset() {
	*x = Borrow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Borrow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Borrow) ProtoMessage() {}

func (x *Borrow) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Borrow.ProtoReflect.Descriptor instead.
func (*Borrow) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{0}
}

func (x *Borrow) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Borrow) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *Borrow) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Borrow) GetOnBehalfOf() []byte {
	if x != nil {
		return x.OnBehalfOf
	}
	return nil
}

func (x *Borrow) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Borrow) GetBorrowRateMode() []byte {
	if x != nil {
		return x.BorrowRateMode
	}
	return nil
}

func (x *Borrow) GetBorrowRate() []byte {
	if x != nil {
		return x.BorrowRate
	}
	return nil
}

func (x *Borrow) GetReferral() uint32 {
	if x != nil {
		return x.Referral
	}
	return 0
}

func (x *Borrow) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Borrow) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Borrow) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	OnBehalfOf  []byte                 `protobuf:"bytes,4,opt,name=onBehalfOf,proto3" json:"onBehalfOf,omitempty"`
	Amount      []byte                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"` // uint256
	Referral    uint32                 `protobuf:"varint,6,opt,name=referral,proto3" json:"referral,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,7,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,8,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Deposit) Reset() {
	*x = Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit) ProtoMessage() {}

func (x *Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit.ProtoReflect.Descriptor instead.
func (*Deposit) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{1}
}

func (x *Deposit) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Deposit) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *Deposit) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Deposit) GetOnBehalfOf() []byte {
	if x != nil {
		return x.OnBehalfOf
	}
	return nil
}

func (x *Deposit) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Deposit) GetReferral() uint32 {
	if x != nil {
		return x.Referral
	}
	return 0
}

func (x *Deposit) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Deposit) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Deposit) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type RebalanceStableBorrowRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,4,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,5,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *RebalanceStableBorrowRate) Reset() {
	*x = RebalanceStableBorrowRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceStableBorrowRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceStableBorrowRate) ProtoMessage() {}

func (x *RebalanceStableBorrowRate) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceStableBorrowRate.ProtoReflect.Descriptor instead.
func (*RebalanceStableBorrowRate) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{2}
}

func (x *RebalanceStableBorrowRate) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *RebalanceStableBorrowRate) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *RebalanceStableBorrowRate) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RebalanceStableBorrowRate) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *RebalanceStableBorrowRate) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *RebalanceStableBorrowRate) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type ReserveUsedAsCollateralDisabled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,4,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,5,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *ReserveUsedAsCollateralDisabled) Reset() {
	*x = ReserveUsedAsCollateralDisabled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveUsedAsCollateralDisabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveUsedAsCollateralDisabled) ProtoMessage() {}

func (x *ReserveUsedAsCollateralDisabled) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveUsedAsCollateralDisabled.ProtoReflect.Descriptor instead.
func (*ReserveUsedAsCollateralDisabled) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{3}
}

func (x *ReserveUsedAsCollateralDisabled) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ReserveUsedAsCollateralDisabled) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *ReserveUsedAsCollateralDisabled) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReserveUsedAsCollateralDisabled) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ReserveUsedAsCollateralDisabled) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *ReserveUsedAsCollateralDisabled) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type ReserveUsedAsCollateralEnabled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,4,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,5,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *ReserveUsedAsCollateralEnabled) Reset() {
	*x = ReserveUsedAsCollateralEnabled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveUsedAsCollateralEnabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveUsedAsCollateralEnabled) ProtoMessage() {}

func (x *ReserveUsedAsCollateralEnabled) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveUsedAsCollateralEnabled.ProtoReflect.Descriptor instead.
func (*ReserveUsedAsCollateralEnabled) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{4}
}

func (x *ReserveUsedAsCollateralEnabled) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ReserveUsedAsCollateralEnabled) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *ReserveUsedAsCollateralEnabled) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReserveUsedAsCollateralEnabled) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ReserveUsedAsCollateralEnabled) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *ReserveUsedAsCollateralEnabled) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	To          []byte                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount      []byte                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,6,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,7,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,8,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Withdraw) Reset() {
	*x = Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdraw) ProtoMessage() {}

func (x *Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdraw.ProtoReflect.Descriptor instead.
func (*Withdraw) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{5}
}

func (x *Withdraw) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Withdraw) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *Withdraw) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Withdraw) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Withdraw) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Withdraw) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Withdraw) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Withdraw) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type ReserveDataUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts                  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve             []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	LiquidityRate       []byte                 `protobuf:"bytes,3,opt,name=liquidityRate,proto3" json:"liquidityRate,omitempty"`             // uint256
	StableBorrowRate    []byte                 `protobuf:"bytes,4,opt,name=stableBorrowRate,proto3" json:"stableBorrowRate,omitempty"`       // uint256
	VariableBorrowRate  []byte                 `protobuf:"bytes,5,opt,name=variableBorrowRate,proto3" json:"variableBorrowRate,omitempty"`   // uint256
	LiquidityIndex      []byte                 `protobuf:"bytes,6,opt,name=liquidityIndex,proto3" json:"liquidityIndex,omitempty"`           // uint256
	VariableBorrowIndex []byte                 `protobuf:"bytes,7,opt,name=variableBorrowIndex,proto3" json:"variableBorrowIndex,omitempty"` // uint256
	BlockNumber         uint64                 `protobuf:"varint,8,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex            uint64                 `protobuf:"varint,9,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash              []byte                 `protobuf:"bytes,10,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *ReserveDataUpdated) Reset() {
	*x = ReserveDataUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveDataUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveDataUpdated) ProtoMessage() {}

func (x *ReserveDataUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveDataUpdated.ProtoReflect.Descriptor instead.
func (*ReserveDataUpdated) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{6}
}

func (x *ReserveDataUpdated) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ReserveDataUpdated) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *ReserveDataUpdated) GetLiquidityRate() []byte {
	if x != nil {
		return x.LiquidityRate
	}
	return nil
}

func (x *ReserveDataUpdated) GetStableBorrowRate() []byte {
	if x != nil {
		return x.StableBorrowRate
	}
	return nil
}

func (x *ReserveDataUpdated) GetVariableBorrowRate() []byte {
	if x != nil {
		return x.VariableBorrowRate
	}
	return nil
}

func (x *ReserveDataUpdated) GetLiquidityIndex() []byte {
	if x != nil {
		return x.LiquidityIndex
	}
	return nil
}

func (x *ReserveDataUpdated) GetVariableBorrowIndex() []byte {
	if x != nil {
		return x.VariableBorrowIndex
	}
	return nil
}

func (x *ReserveDataUpdated) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ReserveDataUpdated) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *ReserveDataUpdated) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Swap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	RateMode    []byte                 `protobuf:"bytes,4,opt,name=rateMode,proto3" json:"rateMode,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,6,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,7,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Swap) Reset() {
	*x = Swap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Swap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Swap) ProtoMessage() {}

func (x *Swap) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Swap.ProtoReflect.Descriptor instead.
func (*Swap) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{7}
}

func (x *Swap) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Swap) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *Swap) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Swap) GetRateMode() []byte {
	if x != nil {
		return x.RateMode
	}
	return nil
}

func (x *Swap) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Swap) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Swap) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Unpaused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,3,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Unpaused) Reset() {
	*x = Unpaused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unpaused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unpaused) ProtoMessage() {}

func (x *Unpaused) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unpaused.ProtoReflect.Descriptor instead.
func (*Unpaused) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{8}
}

func (x *Unpaused) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Unpaused) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Unpaused) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Unpaused) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type LiquidationCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts                         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	CollateralAsset            []byte                 `protobuf:"bytes,2,opt,name=collateralAsset,proto3" json:"collateralAsset,omitempty"`
	DebtAsset                  []byte                 `protobuf:"bytes,3,opt,name=debtAsset,proto3" json:"debtAsset,omitempty"`
	User                       []byte                 `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	DebtToCover                []byte                 `protobuf:"bytes,5,opt,name=debtToCover,proto3" json:"debtToCover,omitempty"`                               // uint256
	LiquidatedCollateralAmount []byte                 `protobuf:"bytes,6,opt,name=liquidatedCollateralAmount,proto3" json:"liquidatedCollateralAmount,omitempty"` // uint256
	Liquidator                 []byte                 `protobuf:"bytes,7,opt,name=liquidator,proto3" json:"liquidator,omitempty"`
	ReceiveAToken              bool                   `protobuf:"varint,8,opt,name=receiveAToken,proto3" json:"receiveAToken,omitempty"`
	BlockNumber                uint64                 `protobuf:"varint,9,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex                   uint64                 `protobuf:"varint,10,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash                     []byte                 `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *LiquidationCall) Reset() {
	*x = LiquidationCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidationCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidationCall) ProtoMessage() {}

func (x *LiquidationCall) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidationCall.ProtoReflect.Descriptor instead.
func (*LiquidationCall) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{9}
}

func (x *LiquidationCall) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *LiquidationCall) GetCollateralAsset() []byte {
	if x != nil {
		return x.CollateralAsset
	}
	return nil
}

func (x *LiquidationCall) GetDebtAsset() []byte {
	if x != nil {
		return x.DebtAsset
	}
	return nil
}

func (x *LiquidationCall) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LiquidationCall) GetDebtToCover() []byte {
	if x != nil {
		return x.DebtToCover
	}
	return nil
}

func (x *LiquidationCall) GetLiquidatedCollateralAmount() []byte {
	if x != nil {
		return x.LiquidatedCollateralAmount
	}
	return nil
}

func (x *LiquidationCall) GetLiquidator() []byte {
	if x != nil {
		return x.Liquidator
	}
	return nil
}

func (x *LiquidationCall) GetReceiveAToken() bool {
	if x != nil {
		return x.ReceiveAToken
	}
	return false
}

func (x *LiquidationCall) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *LiquidationCall) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *LiquidationCall) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Repay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Reserve     []byte                 `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	User        []byte                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Repayer     []byte                 `protobuf:"bytes,4,opt,name=repayer,proto3" json:"repayer,omitempty"`
	Amount      []byte                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,6,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,7,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,8,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Repay) Reset() {
	*x = Repay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repay) ProtoMessage() {}

func (x *Repay) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repay.ProtoReflect.Descriptor instead.
func (*Repay) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{10}
}

func (x *Repay) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Repay) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *Repay) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Repay) GetRepayer() []byte {
	if x != nil {
		return x.Repayer
	}
	return nil
}

func (x *Repay) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Repay) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Repay) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Repay) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type FlashLoan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Target       []byte                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Initiator    []byte                 `protobuf:"bytes,3,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Asset        []byte                 `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount       []byte                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`   // uint256
	Premium      []byte                 `protobuf:"bytes,6,opt,name=premium,proto3" json:"premium,omitempty"` // uint256
	ReferralCode uint32                 `protobuf:"varint,7,opt,name=referralCode,proto3" json:"referralCode,omitempty"`
	BlockNumber  uint64                 `protobuf:"varint,8,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex     uint64                 `protobuf:"varint,9,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash       []byte                 `protobuf:"bytes,10,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *FlashLoan) Reset() {
	*x = FlashLoan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlashLoan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlashLoan) ProtoMessage() {}

func (x *FlashLoan) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlashLoan.ProtoReflect.Descriptor instead.
func (*FlashLoan) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{11}
}

func (x *FlashLoan) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *FlashLoan) GetTarget() []byte {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *FlashLoan) GetInitiator() []byte {
	if x != nil {
		return x.Initiator
	}
	return nil
}

func (x *FlashLoan) GetAsset() []byte {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *FlashLoan) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *FlashLoan) GetPremium() []byte {
	if x != nil {
		return x.Premium
	}
	return nil
}

func (x *FlashLoan) GetReferralCode() uint32 {
	if x != nil {
		return x.ReferralCode
	}
	return 0
}

func (x *FlashLoan) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *FlashLoan) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *FlashLoan) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Paused struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,3,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *Paused) Reset() {
	*x = Paused{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lendingpool_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paused) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paused) ProtoMessage() {}

func (x *Paused) ProtoReflect() protoreflect.Message {
	mi := &file_lendingpool_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paused.ProtoReflect.Descriptor instead.
func (*Paused) Descriptor() ([]byte, []int) {
	return file_lendingpool_proto_rawDescGZIP(), []int{12}
}

func (x *Paused) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Paused) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Paused) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Paused) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

var File_lendingpool_proto protoreflect.FileDescriptor

var file_lendingpool_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd4, 0x02, 0x0a, 0x06, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61,
	0x6c, 0x66, 0x4f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x6e, 0x42, 0x65,
	0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x8d, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x6c, 0x66, 0x4f, 0x66, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xcb, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xd1, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xd0, 0x01, 0x0a, 0x1e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55, 0x73, 0x65, 0x64, 0x41, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xe2, 0x01,
	0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x8c, 0x03, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x6f, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72,
	0x72, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x22, 0xd2, 0x01, 0x0a, 0x04, 0x53, 0x77, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x55, 0x6e, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x97, 0x03, 0x0a, 0x0f, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x54, 0x6f, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1a, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x41, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22,
	0xe9, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xaf, 0x02, 0x0a, 0x09,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x8a, 0x01,
	0x0a, 0x06, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x79, 0x6c, 0x6f, 0x74, 0x75,
	0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x61, 0x76,
	0x65, 0x2f, 0x6c, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lendingpool_proto_rawDescOnce sync.Once
	file_lendingpool_proto_rawDescData = file_lendingpool_proto_rawDesc
)

func file_lendingpool_proto_rawDescGZIP() []byte {
	file_lendingpool_proto_rawDescOnce.Do(func() {
		file_lendingpool_proto_rawDescData = protoimpl.X.CompressGZIP(file_lendingpool_proto_rawDescData)
	})
	return file_lendingpool_proto_rawDescData
}

var file_lendingpool_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_lendingpool_proto_goTypes = []interface{}{
	(*Borrow)(nil),                          // 0: lendingpool.Borrow
	(*Deposit)(nil),                         // 1: lendingpool.Deposit
	(*RebalanceStableBorrowRate)(nil),       // 2: lendingpool.RebalanceStableBorrowRate
	(*ReserveUsedAsCollateralDisabled)(nil), // 3: lendingpool.ReserveUsedAsCollateralDisabled
	(*ReserveUsedAsCollateralEnabled)(nil),  // 4: lendingpool.ReserveUsedAsCollateralEnabled
	(*Withdraw)(nil),                        // 5: lendingpool.Withdraw
	(*ReserveDataUpdated)(nil),              // 6: lendingpool.ReserveDataUpdated
	(*Swap)(nil),                            // 7: lendingpool.Swap
	(*Unpaused)(nil),                        // 8: lendingpool.Unpaused
	(*LiquidationCall)(nil),                 // 9: lendingpool.LiquidationCall
	(*Repay)(nil),                           // 10: lendingpool.Repay
	(*FlashLoan)(nil),                       // 11: lendingpool.FlashLoan
	(*Paused)(nil),                          // 12: lendingpool.Paused
	(*timestamppb.Timestamp)(nil),           // 13: google.protobuf.Timestamp
}
var file_lendingpool_proto_depIdxs = []int32{
	13, // 0: lendingpool.Borrow.ts:type_name -> google.protobuf.Timestamp
	13, // 1: lendingpool.Deposit.ts:type_name -> google.protobuf.Timestamp
	13, // 2: lendingpool.RebalanceStableBorrowRate.ts:type_name -> google.protobuf.Timestamp
	13, // 3: lendingpool.ReserveUsedAsCollateralDisabled.ts:type_name -> google.protobuf.Timestamp
	13, // 4: lendingpool.ReserveUsedAsCollateralEnabled.ts:type_name -> google.protobuf.Timestamp
	13, // 5: lendingpool.Withdraw.ts:type_name -> google.protobuf.Timestamp
	13, // 6: lendingpool.ReserveDataUpdated.ts:type_name -> google.protobuf.Timestamp
	13, // 7: lendingpool.Swap.ts:type_name -> google.protobuf.Timestamp
	13, // 8: lendingpool.Unpaused.ts:type_name -> google.protobuf.Timestamp
	13, // 9: lendingpool.LiquidationCall.ts:type_name -> google.protobuf.Timestamp
	13, // 10: lendingpool.Repay.ts:type_name -> google.protobuf.Timestamp
	13, // 11: lendingpool.FlashLoan.ts:type_name -> google.protobuf.Timestamp
	13, // 12: lendingpool.Paused.ts:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_lendingpool_proto_init() }
func file_lendingpool_proto_init() {
	if File_lendingpool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lendingpool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Borrow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceStableBorrowRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveUsedAsCollateralDisabled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveUsedAsCollateralEnabled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveDataUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Swap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unpaused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidationCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlashLoan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lendingpool_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paused); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lendingpool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lendingpool_proto_goTypes,
		DependencyIndexes: file_lendingpool_proto_depIdxs,
		MessageInfos:      file_lendingpool_proto_msgTypes,
	}.Build()
	File_lendingpool_proto = out.File
	file_lendingpool_proto_rawDesc = nil
	file_lendingpool_proto_goTypes = nil
	file_lendingpool_proto_depIdxs = nil
}
