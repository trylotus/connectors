// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: xo.proto

package xo

import (
	_ "github.com/trylotus/connectors/cyber/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaidDM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	UserId      string                 `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Denom       string                 `protobuf:"bytes,6,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount      []byte                 `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"` // uint256
}

func (x *PaidDM) Reset() {
	*x = PaidDM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaidDM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidDM) ProtoMessage() {}

func (x *PaidDM) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidDM.ProtoReflect.Descriptor instead.
func (*PaidDM) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{0}
}

func (x *PaidDM) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *PaidDM) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *PaidDM) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PaidDM) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *PaidDM) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PaidDM) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *PaidDM) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type RoleAdminChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts                *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber       uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index             uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash            []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Role              []byte                 `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	PreviousAdminRole []byte                 `protobuf:"bytes,6,opt,name=previousAdminRole,proto3" json:"previousAdminRole,omitempty"`
	NewAdminRole      []byte                 `protobuf:"bytes,7,opt,name=newAdminRole,proto3" json:"newAdminRole,omitempty"`
}

func (x *RoleAdminChanged) Reset() {
	*x = RoleAdminChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAdminChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAdminChanged) ProtoMessage() {}

func (x *RoleAdminChanged) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAdminChanged.ProtoReflect.Descriptor instead.
func (*RoleAdminChanged) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{1}
}

func (x *RoleAdminChanged) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *RoleAdminChanged) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *RoleAdminChanged) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RoleAdminChanged) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *RoleAdminChanged) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleAdminChanged) GetPreviousAdminRole() []byte {
	if x != nil {
		return x.PreviousAdminRole
	}
	return nil
}

func (x *RoleAdminChanged) GetNewAdminRole() []byte {
	if x != nil {
		return x.NewAdminRole
	}
	return nil
}

type SBTUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	PostId      string                 `protobuf:"bytes,5,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *SBTUpdated) Reset() {
	*x = SBTUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBTUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBTUpdated) ProtoMessage() {}

func (x *SBTUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBTUpdated.ProtoReflect.Descriptor instead.
func (*SBTUpdated) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{2}
}

func (x *SBTUpdated) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *SBTUpdated) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *SBTUpdated) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SBTUpdated) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *SBTUpdated) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type NewGoodVibes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	PostId      string                 `protobuf:"bytes,5,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *NewGoodVibes) Reset() {
	*x = NewGoodVibes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGoodVibes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGoodVibes) ProtoMessage() {}

func (x *NewGoodVibes) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGoodVibes.ProtoReflect.Descriptor instead.
func (*NewGoodVibes) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{3}
}

func (x *NewGoodVibes) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *NewGoodVibes) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NewGoodVibes) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NewGoodVibes) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *NewGoodVibes) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Poster      []byte                 `protobuf:"bytes,5,opt,name=poster,proto3" json:"poster,omitempty"`
	PostId      string                 `protobuf:"bytes,6,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{4}
}

func (x *Post) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Post) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Post) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Post) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Post) GetPoster() []byte {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *Post) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type RoleGranted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Role        []byte                 `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Account     []byte                 `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	Sender      []byte                 `protobuf:"bytes,7,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *RoleGranted) Reset() {
	*x = RoleGranted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleGranted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleGranted) ProtoMessage() {}

func (x *RoleGranted) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleGranted.ProtoReflect.Descriptor instead.
func (*RoleGranted) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{5}
}

func (x *RoleGranted) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *RoleGranted) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *RoleGranted) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RoleGranted) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *RoleGranted) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleGranted) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RoleGranted) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

type Initialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Version     uint64                 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Initialized) Reset() {
	*x = Initialized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Initialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initialized) ProtoMessage() {}

func (x *Initialized) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initialized.ProtoReflect.Descriptor instead.
func (*Initialized) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{6}
}

func (x *Initialized) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Initialized) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Initialized) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Initialized) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Initialized) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type NewMutualLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	MyId        string                 `protobuf:"bytes,5,opt,name=myId,proto3" json:"myId,omitempty"`
	TargetId    string                 `protobuf:"bytes,6,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *NewMutualLike) Reset() {
	*x = NewMutualLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMutualLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMutualLike) ProtoMessage() {}

func (x *NewMutualLike) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMutualLike.ProtoReflect.Descriptor instead.
func (*NewMutualLike) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{7}
}

func (x *NewMutualLike) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *NewMutualLike) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NewMutualLike) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NewMutualLike) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *NewMutualLike) GetMyId() string {
	if x != nil {
		return x.MyId
	}
	return ""
}

func (x *NewMutualLike) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type RoleRevoked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index       uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Role        []byte                 `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Account     []byte                 `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	Sender      []byte                 `protobuf:"bytes,7,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *RoleRevoked) Reset() {
	*x = RoleRevoked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleRevoked) ProtoMessage() {}

func (x *RoleRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleRevoked.ProtoReflect.Descriptor instead.
func (*RoleRevoked) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{8}
}

func (x *RoleRevoked) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *RoleRevoked) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *RoleRevoked) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RoleRevoked) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *RoleRevoked) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleRevoked) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RoleRevoked) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

type Swiped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber  uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	Index        uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxHash       []byte                 `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Sender       []byte                 `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	SwipedUserId string                 `protobuf:"bytes,6,opt,name=swipedUserId,proto3" json:"swipedUserId,omitempty"`
}

func (x *Swiped) Reset() {
	*x = Swiped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Swiped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Swiped) ProtoMessage() {}

func (x *Swiped) ProtoReflect() protoreflect.Message {
	mi := &file_xo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Swiped.ProtoReflect.Descriptor instead.
func (*Swiped) Descriptor() ([]byte, []int) {
	return file_xo_proto_rawDescGZIP(), []int{9}
}

func (x *Swiped) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Swiped) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Swiped) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Swiped) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Swiped) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Swiped) GetSwipedUserId() string {
	if x != nil {
		return x.SwipedUserId
	}
	return ""
}

var File_xo_proto protoreflect.FileDescriptor

var file_xo_proto_rawDesc = []byte{
	0x0a, 0x08, 0x78, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x78, 0x6f, 0x1a, 0x0b,
	0x6c, 0x6f, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a,
	0x06, 0x50, 0x61, 0x69, 0x64, 0x44, 0x4d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x02, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xca, 0xab, 0x30, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x9e, 0x02, 0x0a, 0x10,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73,
	0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xca, 0x01, 0x0a,
	0x0a, 0x53, 0x42, 0x54, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x3a,
	0x28, 0xca, 0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xcc, 0x01, 0x0a, 0x0c, 0x4e, 0x65,
	0x77, 0x47, 0x6f, 0x6f, 0x64, 0x56, 0x69, 0x62, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x3a, 0x28,
	0xca, 0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xdc, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x3a, 0x28, 0xca,
	0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xf9, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24, 0x0a,
	0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xcd, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24, 0x0a,
	0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xf9, 0x01, 0x0a, 0x0b,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x3a, 0x28, 0xca,
	0xab, 0x30, 0x24, 0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x1a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xea, 0x01, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x70,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x70, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x77,
	0x69, 0x70, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x28, 0xca, 0xab, 0x30, 0x24,
	0x0a, 0x22, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x79, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x78, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_xo_proto_rawDescOnce sync.Once
	file_xo_proto_rawDescData = file_xo_proto_rawDesc
)

func file_xo_proto_rawDescGZIP() []byte {
	file_xo_proto_rawDescOnce.Do(func() {
		file_xo_proto_rawDescData = protoimpl.X.CompressGZIP(file_xo_proto_rawDescData)
	})
	return file_xo_proto_rawDescData
}

var file_xo_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_xo_proto_goTypes = []interface{}{
	(*PaidDM)(nil),                // 0: xo.PaidDM
	(*RoleAdminChanged)(nil),      // 1: xo.RoleAdminChanged
	(*SBTUpdated)(nil),            // 2: xo.SBTUpdated
	(*NewGoodVibes)(nil),          // 3: xo.NewGoodVibes
	(*Post)(nil),                  // 4: xo.Post
	(*RoleGranted)(nil),           // 5: xo.RoleGranted
	(*Initialized)(nil),           // 6: xo.Initialized
	(*NewMutualLike)(nil),         // 7: xo.NewMutualLike
	(*RoleRevoked)(nil),           // 8: xo.RoleRevoked
	(*Swiped)(nil),                // 9: xo.Swiped
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_xo_proto_depIdxs = []int32{
	10, // 0: xo.PaidDM.ts:type_name -> google.protobuf.Timestamp
	10, // 1: xo.RoleAdminChanged.ts:type_name -> google.protobuf.Timestamp
	10, // 2: xo.SBTUpdated.ts:type_name -> google.protobuf.Timestamp
	10, // 3: xo.NewGoodVibes.ts:type_name -> google.protobuf.Timestamp
	10, // 4: xo.Post.ts:type_name -> google.protobuf.Timestamp
	10, // 5: xo.RoleGranted.ts:type_name -> google.protobuf.Timestamp
	10, // 6: xo.Initialized.ts:type_name -> google.protobuf.Timestamp
	10, // 7: xo.NewMutualLike.ts:type_name -> google.protobuf.Timestamp
	10, // 8: xo.RoleRevoked.ts:type_name -> google.protobuf.Timestamp
	10, // 9: xo.Swiped.ts:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_xo_proto_init() }
func file_xo_proto_init() {
	if File_xo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaidDM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAdminChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBTUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGoodVibes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleGranted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Initialized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMutualLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleRevoked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Swiped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xo_proto_goTypes,
		DependencyIndexes: file_xo_proto_depIdxs,
		MessageInfos:      file_xo_proto_msgTypes,
	}.Build()
	File_xo_proto = out.File
	file_xo_proto_rawDesc = nil
	file_xo_proto_goTypes = nil
	file_xo_proto_depIdxs = nil
}
