// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: factory/factory.proto

package factory

import (
	_ "github.com/trylotus/go-lotus-proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeeAmountEnabled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,4,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	Fee         uint32                 `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`                                    // uint24
	TickSpacing int32                  `protobuf:"varint,6,opt,name=tick_spacing,json=tickSpacing,proto3" json:"tick_spacing,omitempty"` // int24
}

func (x *FeeAmountEnabled) Reset() {
	*x = FeeAmountEnabled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_factory_factory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeAmountEnabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeAmountEnabled) ProtoMessage() {}

func (x *FeeAmountEnabled) ProtoReflect() protoreflect.Message {
	mi := &file_factory_factory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeAmountEnabled.ProtoReflect.Descriptor instead.
func (*FeeAmountEnabled) Descriptor() ([]byte, []int) {
	return file_factory_factory_proto_rawDescGZIP(), []int{0}
}

func (x *FeeAmountEnabled) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *FeeAmountEnabled) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *FeeAmountEnabled) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *FeeAmountEnabled) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *FeeAmountEnabled) GetFee() uint32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *FeeAmountEnabled) GetTickSpacing() int32 {
	if x != nil {
		return x.TickSpacing
	}
	return 0
}

type OwnerChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,4,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	OldOwner    []byte                 `protobuf:"bytes,5,opt,name=old_owner,json=oldOwner,proto3" json:"old_owner,omitempty"` // Address
	NewOwner    []byte                 `protobuf:"bytes,6,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"` // Address
}

func (x *OwnerChanged) Reset() {
	*x = OwnerChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_factory_factory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerChanged) ProtoMessage() {}

func (x *OwnerChanged) ProtoReflect() protoreflect.Message {
	mi := &file_factory_factory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerChanged.ProtoReflect.Descriptor instead.
func (*OwnerChanged) Descriptor() ([]byte, []int) {
	return file_factory_factory_proto_rawDescGZIP(), []int{1}
}

func (x *OwnerChanged) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *OwnerChanged) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *OwnerChanged) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *OwnerChanged) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *OwnerChanged) GetOldOwner() []byte {
	if x != nil {
		return x.OldOwner
	}
	return nil
}

func (x *OwnerChanged) GetNewOwner() []byte {
	if x != nil {
		return x.NewOwner
	}
	return nil
}

type PoolCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts             *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber    uint64                 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxHash         []byte                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	LogIndex       uint64                 `protobuf:"varint,4,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	Token0         []byte                 `protobuf:"bytes,5,opt,name=token0,proto3" json:"token0,omitempty"`                               // Address
	Token1         []byte                 `protobuf:"bytes,6,opt,name=token1,proto3" json:"token1,omitempty"`                               // Address
	Fee            uint32                 `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`                                    // uint24
	TickSpacing    int32                  `protobuf:"varint,8,opt,name=tick_spacing,json=tickSpacing,proto3" json:"tick_spacing,omitempty"` // int24
	Pool           []byte                 `protobuf:"bytes,9,opt,name=pool,proto3" json:"pool,omitempty"`                                   // Address
	Token0Name     string                 `protobuf:"bytes,10,opt,name=token0_name,json=token0Name,proto3" json:"token0_name,omitempty"`
	Token0Symbol   string                 `protobuf:"bytes,11,opt,name=token0_symbol,json=token0Symbol,proto3" json:"token0_symbol,omitempty"`
	Token0Decimals uint32                 `protobuf:"varint,12,opt,name=token0_decimals,json=token0Decimals,proto3" json:"token0_decimals,omitempty"`
	Token1Name     string                 `protobuf:"bytes,13,opt,name=token1_name,json=token1Name,proto3" json:"token1_name,omitempty"`
	Token1Symbol   string                 `protobuf:"bytes,14,opt,name=token1_symbol,json=token1Symbol,proto3" json:"token1_symbol,omitempty"`
	Token1Decimals uint32                 `protobuf:"varint,15,opt,name=token1_decimals,json=token1Decimals,proto3" json:"token1_decimals,omitempty"`
}

func (x *PoolCreated) Reset() {
	*x = PoolCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_factory_factory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolCreated) ProtoMessage() {}

func (x *PoolCreated) ProtoReflect() protoreflect.Message {
	mi := &file_factory_factory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolCreated.ProtoReflect.Descriptor instead.
func (*PoolCreated) Descriptor() ([]byte, []int) {
	return file_factory_factory_proto_rawDescGZIP(), []int{2}
}

func (x *PoolCreated) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *PoolCreated) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *PoolCreated) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *PoolCreated) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *PoolCreated) GetToken0() []byte {
	if x != nil {
		return x.Token0
	}
	return nil
}

func (x *PoolCreated) GetToken1() []byte {
	if x != nil {
		return x.Token1
	}
	return nil
}

func (x *PoolCreated) GetFee() uint32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PoolCreated) GetTickSpacing() int32 {
	if x != nil {
		return x.TickSpacing
	}
	return 0
}

func (x *PoolCreated) GetPool() []byte {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *PoolCreated) GetToken0Name() string {
	if x != nil {
		return x.Token0Name
	}
	return ""
}

func (x *PoolCreated) GetToken0Symbol() string {
	if x != nil {
		return x.Token0Symbol
	}
	return ""
}

func (x *PoolCreated) GetToken0Decimals() uint32 {
	if x != nil {
		return x.Token0Decimals
	}
	return 0
}

func (x *PoolCreated) GetToken1Name() string {
	if x != nil {
		return x.Token1Name
	}
	return ""
}

func (x *PoolCreated) GetToken1Symbol() string {
	if x != nil {
		return x.Token1Symbol
	}
	return ""
}

func (x *PoolCreated) GetToken1Decimals() uint32 {
	if x != nil {
		return x.Token1Decimals
	}
	return 0
}

var File_factory_factory_proto protoreflect.FileDescriptor

var file_factory_factory_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x2f, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0xca, 0xab, 0x30,
	0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x3a, 0x36, 0xca, 0xab, 0x30, 0x32, 0x0a, 0x1a, 0x10, 0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a,
	0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x0a, 0x14, 0x1a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x09,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xa3, 0x02, 0x0a, 0x0c, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0xca, 0xab,
	0x30, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a,
	0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x08, 0x6e,
	0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x3a, 0x36, 0xca, 0xab, 0x30, 0x32, 0x0a, 0x1a, 0x10,
	0x01, 0x1a, 0x02, 0x74, 0x73, 0x1a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x09,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x0a, 0x14, 0x1a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x1a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xe2, 0x04, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x04, 0xca, 0xab, 0x30, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1e, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x30, 0x12, 0x1e, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x06, 0xd2, 0xab, 0x30, 0x02, 0x08, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b,
	0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0a, 0xca, 0xab, 0x30, 0x00, 0xd2, 0xab, 0x30, 0x02, 0x08,
	0x01, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x30, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x30, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x30, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x31, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x3a, 0x4d, 0xca, 0xab, 0x30, 0x49, 0x0a, 0x1a, 0x10, 0x01, 0x1a,
	0x02, 0x74, 0x73, 0x1a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x09, 0x6c, 0x6f,
	0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x0a, 0x14, 0x1a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x1a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x0a, 0x15, 0x1a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x30, 0x1a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x31, 0x1a,
	0x03, 0x66, 0x65, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x79, 0x6c, 0x6f, 0x74, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x73, 0x77, 0x61, 0x70, 0x76, 0x33,
	0x2f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_factory_factory_proto_rawDescOnce sync.Once
	file_factory_factory_proto_rawDescData = file_factory_factory_proto_rawDesc
)

func file_factory_factory_proto_rawDescGZIP() []byte {
	file_factory_factory_proto_rawDescOnce.Do(func() {
		file_factory_factory_proto_rawDescData = protoimpl.X.CompressGZIP(file_factory_factory_proto_rawDescData)
	})
	return file_factory_factory_proto_rawDescData
}

var file_factory_factory_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_factory_factory_proto_goTypes = []interface{}{
	(*FeeAmountEnabled)(nil),      // 0: factory.FeeAmountEnabled
	(*OwnerChanged)(nil),          // 1: factory.OwnerChanged
	(*PoolCreated)(nil),           // 2: factory.PoolCreated
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_factory_factory_proto_depIdxs = []int32{
	3, // 0: factory.FeeAmountEnabled.ts:type_name -> google.protobuf.Timestamp
	3, // 1: factory.OwnerChanged.ts:type_name -> google.protobuf.Timestamp
	3, // 2: factory.PoolCreated.ts:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_factory_factory_proto_init() }
func file_factory_factory_proto_init() {
	if File_factory_factory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_factory_factory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeAmountEnabled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_factory_factory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_factory_factory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_factory_factory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_factory_factory_proto_goTypes,
		DependencyIndexes: file_factory_factory_proto_depIdxs,
		MessageInfos:      file_factory_factory_proto_msgTypes,
	}.Build()
	File_factory_factory_proto = out.File
	file_factory_factory_proto_rawDesc = nil
	file_factory_factory_proto_goTypes = nil
	file_factory_factory_proto_depIdxs = nil
}
