syntax = "proto3";

package pool;

import "google/protobuf/timestamp.proto";
import "lotus/lotus.proto";

option go_package = "github.com/trylotus/connectors/uniswapv3/pool";

message Burn {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes owner = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  int32 tick_lower = 7; // int24
  int32 tick_upper = 8; // int24
  string amount = 9 [(lotus.numeric) = {}];
  string amount0 = 10 [(lotus.numeric) = {}];
  string amount1 = 11 [(lotus.numeric) = {}];
}

message Collect {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes owner = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes recipient = 7 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  int32 tick_lower = 8; // int24
  int32 tick_upper = 9; // int24
  string amount0 = 10 [(lotus.numeric) = {}];
  string amount1 = 11 [(lotus.numeric) = {}];
}

message CollectProtocol {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes sender = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes recipient = 7 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  string amount0 = 8 [(lotus.numeric) = {}];
  string amount1 = 9 [(lotus.numeric) = {}];
}

message Flash {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes sender = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes recipient = 7 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  string amount0 = 8 [(lotus.numeric) = {}];
  string amount1 = 9 [(lotus.numeric) = {}];
  string paid0 = 10 [(lotus.numeric) = {}];
  string paid1 = 11 [(lotus.numeric) = {}];
}

message IncreaseObservationCardinalityNext {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  uint32 observation_cardinality_next_old = 6; // uint16
  uint32 observation_cardinality_next_new = 7; // uint16
}

message Initialize {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  string sqrt_price_x96 = 6 [(lotus.numeric) = {precision: 50}]; // uint160
  int32 tick = 7; // int24
}

message Mint {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes sender = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes owner = 7 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  int32 tick_lower = 8; // int24
  int32 tick_upper = 9; // int24
  string amount = 10 [(lotus.numeric) = {}];
  string amount0 = 11 [(lotus.numeric) = {}];
  string amount1 = 12 [(lotus.numeric) = {}];
}

message SetFeeProtocol {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  uint32 fee_protocol0_old = 6; // uint8
  uint32 fee_protocol1_old = 7; // uint8
  uint32 fee_protocol0_new = 8; // uint8
  uint32 fee_protocol1_new = 9; // uint8
}

message Swap {
  option (lotus.composite).index = {
    unique: true
    fields: [
      "ts",
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "tx_hash",
      "log_index"
    ]
  };
  option (lotus.composite).index = {
    fields: [
      "pool",
      "ts"
    ]
  };

  google.protobuf.Timestamp ts = 1;
  uint64 block_number = 2 [(lotus.index) = {}];
  bytes tx_hash = 3 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}];
  uint64 log_index = 4;
  bytes pool = 5 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes sender = 6 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  bytes recipient = 7 [(lotus.bytes) = {format: FORMAT_TYPE_HEX}]; // Address
  string amount0 = 8 [(lotus.numeric) = {}];
  string amount1 = 9 [(lotus.numeric) = {}];
  string sqrt_price_x96 = 10 [(lotus.numeric) = {precision: 50}]; // uint160
  string liquidity = 11 [(lotus.numeric) = {precision: 39}]; // uint128
  int32 tick = 12; // int24
}

message Trade1min {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '1 min'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('1 min', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}

message Trade10min {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '10 min'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('10 min', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}

message Trade1h {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '10 min'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('10 hour', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}

message Trade1d {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '1 hour'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('1 day', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}

message Trade1mon {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '1 hour'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('1 month', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}

message Trade1y {
  option (lotus.view) = {
    topic: "lotus.uniswapv3.0_0_0.pool_Swap"
    materialized: true
    refresh_interval: '1 hour'
    options: ["timescaledb.continuous"]
    group_by: [
      "t",
      "pool"
    ]
    where: "amount0 > 0"
  };

  option (lotus.composite).index = {
    fields: [
      "pool",
      "t"
    ]
  };

  google.protobuf.Timestamp t = 1 [(lotus.projection) = "time_bucket('1 year', ts)"];
  bytes pool = 2 [
    (lotus.projection) = "pool",
    (lotus.bytes) = {format: FORMAT_TYPE_HEX}
  ];
  string open_price = 3 [
    (lotus.projection) = "first(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  string high_price = 4 [
    (lotus.projection) = "max(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string low_price = 5 [
    (lotus.projection) = "min(abs(amount1) / abs(amount0))",
    (lotus.numeric) = {}
  ];
  string close_price = 6 [
    (lotus.projection) = "last(abs(amount1) / abs(amount0), ts)",
    (lotus.numeric) = {}
  ];
  int64 tx_count = 7 [(lotus.projection) = "count(*)"];
  string volume0_buy = 8 [
    (lotus.projection) = "sum(case when amount0 < 0 then -amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume0_sell = 9 [
    (lotus.projection) = "sum(case when amount0 > 0 then amount0 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_buy = 10 [
    (lotus.projection) = "sum(case when amount1 < 0 then -amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
  string volume1_sell = 11 [
    (lotus.projection) = "sum(case when amount1 > 0 then amount1 else 0 end)",
    (lotus.numeric) = {}
  ];
}
